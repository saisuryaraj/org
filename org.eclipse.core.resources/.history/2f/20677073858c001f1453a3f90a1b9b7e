package utilities;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class EncryptionUtil {
    private static final String ALGORITHM = "AES";

    // Encrypt the URL
    public static String encrypt(String data) throws Exception {
        SecretKey secretKey = KeyGenerator.getInstance(ALGORITHM).generateKey();
        Cipher cipher = Cipher.getInstance(ALGORITHM);
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        byte[] encryptedBytes = cipher.doFinal(data.getBytes(StandardCharsets.UTF_8));
        return Base64.getEncoder().encodeToString(encryptedBytes);
    }

    // Decrypt the URL
    public static String decrypt(String encryptedData) throws Exception {
        byte[] decryptedBytes = Base64.getDecoder().decode(encryptedData);
        SecretKey secretKey = KeyGenerator.getInstance(ALGORITHM).generateKey();
        Cipher cipher = Cipher.getInstance(ALGORITHM);
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        return new String(cipher.doFinal(decryptedBytes), StandardCharsets.UTF_8);
    }
}
