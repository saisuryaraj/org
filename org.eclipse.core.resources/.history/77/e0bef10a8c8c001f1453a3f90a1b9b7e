package utilities;

import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Base64;
import java.util.Properties;

public class Config {
    private Properties properties;

    public Config() {
        properties = new Properties();
        try (InputStream input = new FileInputStream("config.properties")) {
            properties.load(input);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public String getDecryptedPassword() {
        try {
            // Retrieve the encrypted password and key from properties
            String encryptedPassword = properties.getProperty("db.password");
            String keyString = properties.getProperty("encryption.key");

            // Convert the base64 key string back to SecretKey
            byte[] decodedKey = Base64.getDecoder().decode(keyString);
            SecretKey secretKey = new SecretKeySpec(decodedKey, 0, decodedKey.length, "AES");

            // Decrypt the password
            return EncryptionUtil.decrypt(encryptedPassword, secretKey);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
